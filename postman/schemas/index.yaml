openapi: 3.0.0
info:
  version: 1.0.0
  title: Customer Review API
  description: API that handles Customer Reivews

security:
  - BasicAuth: []

servers:
  - url: https://api.tigerchow.com/reviews

paths:
  /reviews:
    get:
      description: Returns a list of customers reviews
      responses:
        '200':
          description: Successfully returned a list of customer reviews
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      description: Deletes all reviews
      responses:
        '204':
          description: Successfully deleted all reviews
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'
                

  /reviews/{ReviewID}: #Michael
    get:
      description: Retrieve review with specified ID
      parameters: 
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the specified review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          $ref: '#/components/responses/400Error'
    patch: #Torrence
      description: "edit to existing review"
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Update successful'
          content:
            application/json:
              schema:
                type: object
                properties: 
                  message: 
                    type: string
        '400':
          $ref: '#/components/responses/400Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
    delete: #Emma
      description: Deletes review at specified ID
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Review at given ID was successfully deleted.
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'

  /reviews/restaruant/{RestaurantID}: # Michael
    get:
      description: "Retrieve all reviews for a restaurant"
      parameters:
        - name: RestaurantID
          in: path
          description: ID of the restaurant
          required: true
          schema:
            type: integer
        - in: query
          name: restaruantRating
          schema:
            type: integer
          required: false
          description: "Rating of the restaurant to retrieve reviews for"
      responses:
        '200':
          description: Successfully list the specified review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
        '400':
          $ref: '#/components/responses/400Error'
    post: # Dhruvisha
      description: Lets a customer post a review for a restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: RestaurantID
          in: path
          description: ID of the restaurant
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully added a new review for a restaurant 
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      description: Deletes all reviews for a restaurant
      parameters:
      - name: RestaurantID
        in: path
        description: ID of the restaurant
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Successfully deleted all reviews for given restaurant
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'

  /reviews/driver/{DriverID}:  # Dhruvisha & Torrence
    get:
      description: Retrieve all reviews for a driver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: DriverID
          in: path
          description: ID of the driver
          required: true
          schema:
            type: integer
        - in: query
          name: driverRating
          schema:
            type: integer
          required: true
          description: "Rating of the driver to retrieve reviews for"
      responses:
        '200':
          description: Successfully retrieved reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: string
        '400':
          $ref: "#/components/responses/400Error"
    post:
      description: Add a review for a driver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: DriverID
          in: path
          description: ID of the driver
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully added a new review for a driver 
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      description: Deletes all reviews for a driver
      parameters:
        - name: DriverID
          in: path
          description: ID of the driver
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Successfully deleted all reviews for given driver
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'

  /reviews/{ReviewID}/comments:
    get:
      description: Retrieves all comments for an existing review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved reviews
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: string
        '400':
          $ref: '#/components/responses/400Error'
        '403':
          $ref: '#/components/responses/403Error'
        '404':
          $ref: '#/components/responses/404Error'
    post: # Dhruvisha
      description: Add a comment for an existing review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully added a new comment for an existing review
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      description: Deletes all comments at specified review
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Comments at given review ID were successfully deleted.
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'

  /reviews/{ReviewID}/comments/{CommentID}:
    get:
      description: Retrieves comment with specified ID
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
        - name: CommentID
          in: path
          description: ID of the comment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the specified comment
        '400':
          $ref: '#/components/responses/400Error'
    patch:
      description: Edit a comment under a specific review
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
        - name: CommentID
          in: path
          description: ID of the comment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
    delete:
      description: Deletes comment with specified ID
      parameters:
        - name: ReviewID
          in: path
          description: ID of the review
          required: true
          schema:
            type: integer
        - name: CommentID
          in: path
          description: ID of the comment
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deletes the specified comment
        '400':
          $ref: '#/components/responses/400Error'

  /reviews/user/{UserID}: # Michael
    get:
      description: "Retrieve all reviews from a specific user"
      parameters:
        - name: UserID
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully list the review from the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewList'
        '400':
          $ref: '#/components/responses/400Error'
    delete:
      description: Deletes all reviews from specified user
      parameters:
        - name: UserID
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Reviews at given user ID were successfully deleted.
        '400':
          $ref: '#/components/responses/400Error'
        '404':
          $ref: '#/components/responses/404Error'

  /health: # Emma
    get:
      description: Gets health of API
      responses:
        '200':
          description: Successful call to health
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_health:
                    type: string

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  
  schemas:
    ErrorMsg:
      type: object
      properties:   
        message:
          type: string
    Review:
      type: object
      required:
      - Review-id
      - rating
      - userId
      - driver-id/restuarant-id
      - comment
      - published/date
      properties:
        id:
          type: string
        rating: 
          type: number
        comment:
          type: string
        user:
          type: string
        driver:
          type: string
        restuarant:
          type: string
        published:
          type: string
    ReviewList:
      type: array
      items:
        $ref: '#/components/schemas/Review'

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    404Error:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    403Error:
      description: Not permitted Error
      content:
        application/json:
          schema: 
            type: object
            properties:
              message:
                type: string